{
  "contractName": "NonFungibleToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "MinterRemoved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "approved",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NFTApproval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "operator",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "NFTApprovalForAll",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "NFTTransfer",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "addMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "getApproved",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "operator",
          "type": "address"
        }
      ],
      "name": "isApprovedForAll",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isMinter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "ownerOf",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceMinter",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "safeTransferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "approved",
          "type": "bool"
        }
      ],
      "name": "setApprovalForAll",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "tokenId",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"MinterRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTApproval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"NFTApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"NFTTransfer\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"addMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isMinter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceMinter\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approve(address,uint256)\":{\"details\":\"Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.\",\"params\":{\"to\":\"address to be approved for the given token ID\",\"tokenId\":\"uint256 ID of the token to be approved\"}},\"balanceOf(address)\":{\"details\":\"Gets the balance of the specified address.\",\"params\":{\"owner\":\"address to query the balance of\"},\"return\":\"uint256 representing the amount owned by the passed address\"},\"getApproved(uint256)\":{\"details\":\"Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the approval of\"},\"return\":\"address currently approved for the given token ID\"},\"isApprovedForAll(address,address)\":{\"details\":\"Tells whether an operator is approved by a given owner.\",\"params\":{\"operator\":\"operator address which you want to query the approval of\",\"owner\":\"owner address which you want to query the approval of\"},\"return\":\"bool whether the given operator is approved by the given owner\"},\"mint(address,uint256)\":{\"details\":\"Function to mint tokens.\",\"params\":{\"to\":\"The address that will receive the minted tokens.\",\"tokenId\":\"The token id to mint.\"},\"return\":\"A boolean that indicates if the operation was successful.\"},\"ownerOf(uint256)\":{\"details\":\"Gets the owner of the specified token ID.\",\"params\":{\"tokenId\":\"uint256 ID of the token to query the owner of\"},\"return\":\"address currently marked as the owner of the given token ID\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\\\"onERC721Received(address,address,uint256,bytes)\\\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator\",\"params\":{\"_data\":\"bytes data to send along with a safe transfer check\",\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}},\"setApprovalForAll(address,bool)\":{\"details\":\"Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.\",\"params\":{\"approved\":\"representing the status of the approval to be set\",\"to\":\"operator address to set the approval\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.\",\"params\":{\"from\":\"current owner of the token\",\"to\":\"address to receive the ownership of the given token ID\",\"tokenId\":\"uint256 ID of the token to be transferred\"}}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"@airswap/tokens/contracts/NonFungibleToken.sol\":\"NonFungibleToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":20000},\"remappings\":[]},\"sources\":{\"@airswap/tokens/contracts/AdaptedERC721.sol\":{\"keccak256\":\"0xc36ea166f709420ec86f001e73088c9d647459b49190cfff49179bf88fbd5bb7\",\"urls\":[\"bzz-raw://cebe5640becc8a33ce282ac91d4dd1f1952fdf9b0efe8e899dfb83ac4939d35d\",\"dweb:/ipfs/QmRjG7A63yChHfZiCwednfjPkowz1aDGZZpb9EMFWi2QE2\"]},\"@airswap/tokens/contracts/NonFungibleToken.sol\":{\"keccak256\":\"0xa6cce9eb2aa62bef6753b3ac12189bb2ff832043454556579c23375dab79445e\",\"urls\":[\"bzz-raw://1c3e9c11d8fed47194cb2855cb931a70e94812e0fa5820f5387701aa4b1a9508\",\"dweb:/ipfs/QmWTsrXktjeCd2M8BNxkKR3rg7KqSHFxzxujz1h2uQcMSN\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/access/Roles.sol\":{\"keccak256\":\"0xb002c378d7b82a101bd659c341518953ca0919d342c0a400196982c0e7e7bcdb\",\"urls\":[\"bzz-raw://00a788c4631466c220b385bdd100c571d24b2deccd657615cfbcef6cadf669a4\",\"dweb:/ipfs/QmTEwDbjJNxmMNCDMqtuou3dyM8Wtp8Q9NFvn7SAVM7Jf3\"]},\"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\":{\"keccak256\":\"0xbe8eef6f2cb4e427f5c5d8a76865ccd06e55a4f1d6671ba312d45bfa705aedbf\",\"urls\":[\"bzz-raw://badf338a5e22c8658c01fe2ce89b487d9dbf6d2d9d5eb49df7415383e2498765\",\"dweb:/ipfs/QmP5aMkvFwMJyuQjKE8ADh5tkWYqonb4KjgkAjgYEVVFAv\"]},\"openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0xf1267d23aae72ba9bef7bbef542a658645e1e2a125d107978a0907f6693d43a1\",\"urls\":[\"bzz-raw://35227fc5f4ed2b123ba30d04b8887b7b8e0c492e3947663c08b2bc310e4da17e\",\"dweb:/ipfs/QmYGavckDLSHAtxSXpGgCWzAdAFdeMDDALJdeJawyqP1Ha\"]},\"openzeppelin-solidity/contracts/introspection/ERC165.sol\":{\"keccak256\":\"0x01aedbf24e121a744262e04c7815b2a4c8ce604dee4829c5cff00943a594ccf3\",\"urls\":[\"bzz-raw://999ab32a6498d8ad8db61d47c3774aae2ff919acceebe2aeb50879bef62642c3\",\"dweb:/ipfs/QmephAYF5hoymu9qCFK6mURM2kZJCxU4ntUb4KTf1miVPT\"]},\"openzeppelin-solidity/contracts/introspection/IERC165.sol\":{\"keccak256\":\"0xe0ed10f53955c35eecb02724538650a155aa940be3f0a54cd3bde6c6b0c6e48c\",\"urls\":[\"bzz-raw://7dcfda88e3225987245908c3296f3559752647036804325ebfaa9fd1545161c3\",\"dweb:/ipfs/QmXxx5rHfLL57zdgyyyG9MMv4XGN7bpVSc2MuDcaCgto6u\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/token/ERC721/IERC721Receiver.sol\":{\"keccak256\":\"0x042048c375daca04b31e31c91bbae912b84b5eb818c4e31b2deb530fd2305342\",\"urls\":[\"bzz-raw://d877a87c5e29b9ffca3e334378058c051a4e012fd3635039681003a9376baf1f\",\"dweb:/ipfs/QmR45snf93cFXtB71TZcmoGy9DbcMha8CqgkDKaLvhjXZK\"]},\"openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x70df50e240407aa50915ad14f61b1a901fa335b37de20955b99ed647be756af0\",\"urls\":[\"bzz-raw://9404711f3206610c08ea97fa52c7b6b4d2e9d536e96fc4b7210aa7e24f796c36\",\"dweb:/ipfs/QmZDzpVzjoap13SuPEq5pVCrmdjoKVZnTsQPLKXAbynTTW\"]}},\"version\":1}",
  "bytecode": "0x60806040526200001f6301ffc9a760e01b6001600160e01b036200006616565b6200003a6380ac58cd60e01b6001600160e01b036200006616565b62000060620000516001600160e01b03620000eb16565b6001600160e01b03620000ef16565b62000237565b6001600160e01b03198082161415620000c6576040805162461bcd60e51b815260206004820152601c60248201527f4552433136353a20696e76616c696420696e7465726661636520696400000000604482015290519081900360640190fd5b6001600160e01b0319166000908152602081905260409020805460ff19166001179055565b3390565b6200010a8160056200014160201b6200136b1790919060201c565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6200015682826001600160e01b03620001ce16565b15620001a9576040805162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b038216620002175760405162461bcd60e51b815260040180806020018281038252602281526020018062001ab16022913960400191505060405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b61186a80620002476000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb4651461031f578063aa271e1a1461035a578063b88d4fde1461038d578063e985e9c514610460576100ea565b806370a082311461029f578063983b2d56146102e45780639865027514610317576100ea565b806323b872dd116100c857806323b872dd146101c357806340c10f191461020657806342842e0e1461023f5780636352211e14610282576100ea565b806301ffc9a7146100ef578063081812fc14610142578063095ea7b314610188575b600080fd5b61012e6004803603602081101561010557600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661049b565b604080519115158252519081900360200190f35b61015f6004803603602081101561015857600080fd5b50356104d2565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101c16004803603604081101561019e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561055b565b005b6101c1600480360360608110156101d957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356106ec565b61012e6004803603604081101561021c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561075b565b6101c16004803603606081101561025557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107d5565b61015f6004803603602081101561029857600080fd5b50356107f0565b6102d2600480360360208110156102b557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610871565b60408051918252519081900360200190f35b6101c1600480360360208110156102fa57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661090d565b6101c1610979565b6101c16004803603604081101561033557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135151561098b565b61012e6004803603602081101561037057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610aa9565b6101c1600480360360808110156103a357600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235811692602081013590911691604082013591908101906080810160608201356401000000008111156103eb57600080fd5b8201836020820111156103fd57600080fd5b8035906020019184600183028401116401000000008311171561041f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610abc945050505050565b61012e6004803603604081101561047657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610b2e565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60006104dd82610b69565b610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061176d602c913960400191505060405180910390fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610566826107f0565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806117e46021913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8216148061061657506106168133610b2e565b61066b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806116916038913960400191505060405180910390fd5b60008281526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917fb497174632623317507c114082fd64c660b4313b9375d4c99fd6d9f5067079db91a4505050565b6106f63382610b93565b61074b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806118056031913960400191505060405180910390fd5b610756838383610c85565b505050565b600061076d610768610e63565b610aa9565b6107c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061171c6030913960400191505060405180910390fd5b6107cc8383610e67565b50600192915050565b61075683838360405180602001604052806000815250610abc565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff168061086b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806116f36029913960400191505060405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82166108df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116c9602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902061086b9061100b565b610918610768610e63565b61096d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061171c6030913960400191505060405180910390fd5b6109768161100f565b50565b610989610984610e63565b611064565b565b73ffffffffffffffffffffffffffffffffffffffff8216331415610a1057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016861515908117909155815190815290519293927f2001b55142379b54754fc87d9311bf9cbcbb6a6b560764ad0a2a41f20b1b3a24929181900390910190a35050565b600061086b60058363ffffffff6110b916565b610ac78484846106ec565b610ad384848484611154565b610b28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061160f6032913960400191505060405180910390fd5b50505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b6000610b9e82610b69565b610bf3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611665602c913960400191505060405180910390fd5b6000610bfe836107f0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c6d57508373ffffffffffffffffffffffffffffffffffffffff16610c55846104d2565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c7d5750610c7d8185610b2e565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610ca5826107f0565b73ffffffffffffffffffffffffffffffffffffffff1614610d11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806117bb6029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806116416024913960400191505060405180910390fd5b610d86816112eb565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020610db49061134b565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610de290611362565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917ffd19e66d1a4315847e95661bab80aff36f6801c5b2eeeca82491034bd7660abe91a4505050565b3390565b73ffffffffffffffffffffffffffffffffffffffff8216610ee957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610ef281610b69565b15610f5e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8716908117909155835260039091529020610fc290611362565b604051819073ffffffffffffffffffffffffffffffffffffffff8416906000907ffd19e66d1a4315847e95661bab80aff36f6801c5b2eeeca82491034bd7660abe908290a45050565b5490565b61102060058263ffffffff61136b16565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61107560058263ffffffff61143116565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b600073ffffffffffffffffffffffffffffffffffffffff8216611127576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117996022913960400191505060405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b60006111758473ffffffffffffffffffffffffffffffffffffffff166114dd565b61118157506001610c7d565b6040517f150b7a02000000000000000000000000000000000000000000000000000000008152336004820181815273ffffffffffffffffffffffffffffffffffffffff888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015611221578181015183820152602001611209565b50505050905090810190601f16801561124e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561127057600080fd5b505af1158015611284573d6000803e3d6000fd5b505050506040513d602081101561129a57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff161561097657600090815260026020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b805461135e90600163ffffffff61151416565b9055565b80546001019055565b61137582826110b9565b156113e157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b61143b82826110b9565b611490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061174c6021913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590610c7d5750141592915050565b600061155683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061155d565b9392505050565b60008184841115611606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115cb5781810151838201526020016115b3565b50505050905090810190601f1680156115f85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a265627a7a72315820d53c5c527f9dfdd497567c8afd31394b7157c0356ba75c06b147225fdbe9868964736f6c63430005100032526f6c65733a206163636f756e7420697320746865207a65726f2061646472657373",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ea5760003560e01c806370a082311161008c578063a22cb46511610066578063a22cb4651461031f578063aa271e1a1461035a578063b88d4fde1461038d578063e985e9c514610460576100ea565b806370a082311461029f578063983b2d56146102e45780639865027514610317576100ea565b806323b872dd116100c857806323b872dd146101c357806340c10f191461020657806342842e0e1461023f5780636352211e14610282576100ea565b806301ffc9a7146100ef578063081812fc14610142578063095ea7b314610188575b600080fd5b61012e6004803603602081101561010557600080fd5b50357fffffffff000000000000000000000000000000000000000000000000000000001661049b565b604080519115158252519081900360200190f35b61015f6004803603602081101561015857600080fd5b50356104d2565b6040805173ffffffffffffffffffffffffffffffffffffffff9092168252519081900360200190f35b6101c16004803603604081101561019e57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561055b565b005b6101c1600480360360608110156101d957600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356106ec565b61012e6004803603604081101561021c57600080fd5b5073ffffffffffffffffffffffffffffffffffffffff813516906020013561075b565b6101c16004803603606081101561025557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135811691602081013590911690604001356107d5565b61015f6004803603602081101561029857600080fd5b50356107f0565b6102d2600480360360208110156102b557600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610871565b60408051918252519081900360200190f35b6101c1600480360360208110156102fa57600080fd5b503573ffffffffffffffffffffffffffffffffffffffff1661090d565b6101c1610979565b6101c16004803603604081101561033557600080fd5b5073ffffffffffffffffffffffffffffffffffffffff8135169060200135151561098b565b61012e6004803603602081101561037057600080fd5b503573ffffffffffffffffffffffffffffffffffffffff16610aa9565b6101c1600480360360808110156103a357600080fd5b73ffffffffffffffffffffffffffffffffffffffff8235811692602081013590911691604082013591908101906080810160608201356401000000008111156103eb57600080fd5b8201836020820111156103fd57600080fd5b8035906020019184600183028401116401000000008311171561041f57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929550610abc945050505050565b61012e6004803603604081101561047657600080fd5b5073ffffffffffffffffffffffffffffffffffffffff81358116916020013516610b2e565b7fffffffff000000000000000000000000000000000000000000000000000000001660009081526020819052604090205460ff1690565b60006104dd82610b69565b610532576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061176d602c913960400191505060405180910390fd5b5060009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff1690565b6000610566826107f0565b90508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156105ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806117e46021913960400191505060405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff8216148061061657506106168133610b2e565b61066b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806116916038913960400191505060405180910390fd5b60008281526002602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff87811691821790925591518593918516917fb497174632623317507c114082fd64c660b4313b9375d4c99fd6d9f5067079db91a4505050565b6106f63382610b93565b61074b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806118056031913960400191505060405180910390fd5b610756838383610c85565b505050565b600061076d610768610e63565b610aa9565b6107c2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061171c6030913960400191505060405180910390fd5b6107cc8383610e67565b50600192915050565b61075683838360405180602001604052806000815250610abc565b60008181526001602052604081205473ffffffffffffffffffffffffffffffffffffffff168061086b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806116f36029913960400191505060405180910390fd5b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82166108df576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602a8152602001806116c9602a913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216600090815260036020526040902061086b9061100b565b610918610768610e63565b61096d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603081526020018061171c6030913960400191505060405180910390fd5b6109768161100f565b50565b610989610984610e63565b611064565b565b73ffffffffffffffffffffffffffffffffffffffff8216331415610a1057604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015290519081900360640190fd5b33600081815260046020908152604080832073ffffffffffffffffffffffffffffffffffffffff87168085529083529281902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016861515908117909155815190815290519293927f2001b55142379b54754fc87d9311bf9cbcbb6a6b560764ad0a2a41f20b1b3a24929181900390910190a35050565b600061086b60058363ffffffff6110b916565b610ac78484846106ec565b610ad384848484611154565b610b28576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603281526020018061160f6032913960400191505060405180910390fd5b50505050565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260046020908152604080832093909416825291909152205460ff1690565b60009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff16151590565b6000610b9e82610b69565b610bf3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180611665602c913960400191505060405180910390fd5b6000610bfe836107f0565b90508073ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff161480610c6d57508373ffffffffffffffffffffffffffffffffffffffff16610c55846104d2565b73ffffffffffffffffffffffffffffffffffffffff16145b80610c7d5750610c7d8185610b2e565b949350505050565b8273ffffffffffffffffffffffffffffffffffffffff16610ca5826107f0565b73ffffffffffffffffffffffffffffffffffffffff1614610d11576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260298152602001806117bb6029913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8216610d7d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806116416024913960400191505060405180910390fd5b610d86816112eb565b73ffffffffffffffffffffffffffffffffffffffff83166000908152600360205260409020610db49061134b565b73ffffffffffffffffffffffffffffffffffffffff82166000908152600360205260409020610de290611362565b60008181526001602052604080822080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff86811691821790925591518493918716917ffd19e66d1a4315847e95661bab80aff36f6801c5b2eeeca82491034bd7660abe91a4505050565b3390565b73ffffffffffffffffffffffffffffffffffffffff8216610ee957604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015290519081900360640190fd5b610ef281610b69565b15610f5e57604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015290519081900360640190fd5b600081815260016020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8716908117909155835260039091529020610fc290611362565b604051819073ffffffffffffffffffffffffffffffffffffffff8416906000907ffd19e66d1a4315847e95661bab80aff36f6801c5b2eeeca82491034bd7660abe908290a45050565b5490565b61102060058263ffffffff61136b16565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b61107560058263ffffffff61143116565b60405173ffffffffffffffffffffffffffffffffffffffff8216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b600073ffffffffffffffffffffffffffffffffffffffff8216611127576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806117996022913960400191505060405180910390fd5b5073ffffffffffffffffffffffffffffffffffffffff166000908152602091909152604090205460ff1690565b60006111758473ffffffffffffffffffffffffffffffffffffffff166114dd565b61118157506001610c7d565b6040517f150b7a02000000000000000000000000000000000000000000000000000000008152336004820181815273ffffffffffffffffffffffffffffffffffffffff888116602485015260448401879052608060648501908152865160848601528651600095928a169463150b7a029490938c938b938b939260a4019060208501908083838e5b83811015611221578181015183820152602001611209565b50505050905090810190601f16801561124e5780820380516001836020036101000a031916815260200191505b5095505050505050602060405180830381600087803b15801561127057600080fd5b505af1158015611284573d6000803e3d6000fd5b505050506040513d602081101561129a57600080fd5b50517fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a020000000000000000000000000000000000000000000000000000000014915050949350505050565b60008181526002602052604090205473ffffffffffffffffffffffffffffffffffffffff161561097657600090815260026020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b805461135e90600163ffffffff61151416565b9055565b80546001019055565b61137582826110b9565b156113e157604080517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015290519081900360640190fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055565b61143b82826110b9565b611490576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061174c6021913960400191505060405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff1660009081526020919091526040902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00169055565b6000813f7fc5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a4708115801590610c7d5750141592915050565b600061155683836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f77000081525061155d565b9392505050565b60008184841115611606576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156115cb5781810151838201526020016115b3565b50505050905090810190601f1680156115f85780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50505090039056fe4552433732313a207472616e7366657220746f206e6f6e20455243373231526563656976657220696d706c656d656e7465724552433732313a207472616e7366657220746f20746865207a65726f20616464726573734552433732313a206f70657261746f7220717565727920666f72206e6f6e6578697374656e7420746f6b656e4552433732313a20617070726f76652063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f76656420666f7220616c6c4552433732313a2062616c616e636520717565727920666f7220746865207a65726f20616464726573734552433732313a206f776e657220717565727920666f72206e6f6e6578697374656e7420746f6b656e4d696e746572526f6c653a2063616c6c657220646f6573206e6f74206861766520746865204d696e74657220726f6c65526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c654552433732313a20617070726f76656420717565727920666f72206e6f6e6578697374656e7420746f6b656e526f6c65733a206163636f756e7420697320746865207a65726f20616464726573734552433732313a207472616e73666572206f6620746f6b656e2074686174206973206e6f74206f776e4552433732313a20617070726f76616c20746f2063757272656e74206f776e65724552433732313a207472616e736665722063616c6c6572206973206e6f74206f776e6572206e6f7220617070726f766564a265627a7a72315820d53c5c527f9dfdd497567c8afd31394b7157c0356ba75c06b147225fdbe9868964736f6c63430005100032",
  "sourceMap": "252:407:5:-;;;718:40:11;-1:-1:-1;;;;;;;;718:18:11;:40;:::i;:::-;2753::3;-1:-1:-1;;;;;;;;2753:18:3;:40;:::i;:::-;318:24:9;329:12;-1:-1:-1;;;;;329:10:9;:12;:::i;:::-;-1:-1:-1;;;;;318:10:9;:24;:::i;:::-;252:407:5;;1442:190:11;-1:-1:-1;;;;;;1517:25:11;;;;;1509:66;;;;;-1:-1:-1;;;1509:66:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1585:33:11;:20;:33;;;;;;;;;;:40;;-1:-1:-1;;1585:40:11;1621:4;1585:40;;;1442:190::o;788:96:7:-;867:10;788:96;:::o;786:119:9:-;842:21;855:7;842:8;:12;;;;;;:21;;;;:::i;:::-;878:20;;-1:-1:-1;;;;;878:20:9;;;;;;;;786:119;:::o;260:175:8:-;337:18;341:4;347:7;-1:-1:-1;;;;;337:3:8;:18;:::i;:::-;336:19;328:63;;;;;-1:-1:-1;;;328:63:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;401:20:8;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;401:27:8;424:4;401:27;;;260:175::o;779:200::-;851:4;-1:-1:-1;;;;;875:21:8;;867:68;;;;-1:-1:-1;;;867:68:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;952:20:8;:11;:20;;;;;;;;;;;;;;;779:200::o;252:407:5:-;;;;;;;",
  "deployedSourceMap": "252:407:5:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;252:407:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;915:133:11;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;915:133:11;;;;:::i;:::-;;;;;;;;;;;;;;;;;;4666:190:3;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4666:190:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;4006:389;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;4006:389:3;;;;;;;;;:::i;:::-;;6247:305;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;6247:305:3;;;;;;;;;;;;;;;;;;:::i;535:122:5:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;535:122:5;;;;;;;;;:::i;7177:142:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;7177:142:3;;;;;;;;;;;;;;;;;;:::i;3394:209::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;3394:209:3;;:::i;2990:197::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;2990:197:3;;;;:::i;:::-;;;;;;;;;;;;;;;;607:90:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;607:90:9;;;;:::i;703:77::-;;;:::i;5135:232:3:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5135:232:3;;;;;;;;;;;:::i;494:107:9:-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;494:107:9;;;;:::i;8014:293:3:-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;8014:293:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;5:28;;2:2;;;46:1;43;36:12;2:2;8014:293:3;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8014:293:3;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8014:293:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;8014:293:3;;-1:-1:-1;8014:293:3;;-1:-1:-1;;;;;8014:293:3:i;5675:153::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;5675:153:3;;;;;;;;;;;:::i;915:133:11:-;1008:33;;985:4;1008:33;;;;;;;;;;;;;;915:133::o;4666:190:3:-;4725:7;4748:16;4756:7;4748;:16::i;:::-;4740:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4827:24:3;;;;:15;:24;;;;;;;;;4666:190::o;4006:389::-;4065:13;4081:16;4089:7;4081;:16::i;:::-;4065:32;;4117:5;4111:11;;:2;:11;;;;4103:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4182:10;:19;;;;;:58;;;4205:35;4222:5;4229:10;4205:16;:35::i;:::-;4167:145;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4319:24;;;;:15;:24;;;;;;:29;;;;;;;;;;;;;;4359:31;;4319:24;;4359:31;;;;;;;4006:389;;;:::o;6247:305::-;6404:39;6423:10;6435:7;6404:18;:39::i;:::-;6389:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6515:32;6529:4;6535:2;6539:7;6515:13;:32::i;:::-;6247:305;;;:::o;535:122:5:-;605:4;395:22:9;404:12;:10;:12::i;:::-;395:8;:22::i;:::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;617:18:5;623:2;627:7;617:5;:18::i;:::-;-1:-1:-1;648:4:5;535:122;;;;:::o;7177:142:3:-;7275:39;7292:4;7298:2;7302:7;7275:39;;;;;;;;;;;;:16;:39::i;3394:209::-;3449:7;3480:20;;;:11;:20;;;;;;;;3514:19;3506:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3593:5;3394:209;-1:-1:-1;;3394:209:3:o;2990:197::-;3045:7;3068:19;;;3060:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3148:24;;;;;;;:17;:24;;;;;:34;;:32;:34::i;607:90:9:-;395:22;404:12;:10;:12::i;395:22::-;387:83;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;671:19;682:7;671:10;:19::i;:::-;607:90;:::o;703:77::-;746:27;760:12;:10;:12::i;:::-;746:13;:27::i;:::-;703:77::o;5135:232:3:-;5210:16;;;5216:10;5210:16;;5202:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5282:10;5263:30;;;;:18;:30;;;;;;;;;:34;;;;;;;;;;;;:45;;;;;;;;;;;;;5319:43;;;;;;;5263:34;;5282:10;5319:43;;;;;;;;;;;5135:232;;:::o;494:107:9:-;550:4;573:21;:8;586:7;573:21;:12;:21;:::i;8014:293:3:-;8136:31;8149:4;8155:2;8159:7;8136:12;:31::i;:::-;8188:48;8211:4;8217:2;8221:7;8230:5;8188:22;:48::i;:::-;8173:129;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8014:293;;;;:::o;5675:153::-;5788:25;;;;5767:4;5788:25;;;:18;:25;;;;;;;;:35;;;;;;;;;;;;;;;5675:153::o;8490:142::-;8547:4;8575:20;;;:11;:20;;;;;;;;8608:19;;;8490:142::o;8977:341::-;9074:4;9096:16;9104:7;9096;:16::i;:::-;9088:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9167:13;9183:16;9191:7;9183;:16::i;:::-;9167:32;;9224:5;9213:16;;:7;:16;;;:57;;;;9263:7;9239:31;;:20;9251:7;9239:11;:20::i;:::-;:31;;;9213:57;:99;;;;9280:32;9297:5;9304:7;9280:16;:32::i;:::-;9205:108;8977:341;-1:-1:-1;;;;8977:341:3:o;11028:454::-;11160:4;11140:24;;:16;11148:7;11140;:16::i;:::-;:24;;;11125:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11235:16;;;11227:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11299:23;11314:7;11299:14;:23::i;:::-;11329;;;;;;;:17;:23;;;;;:35;;:33;:35::i;:::-;11370:21;;;;;;;:17;:21;;;;;:33;;:31;:33::i;:::-;11410:20;;;;:11;:20;;;;;;:25;;;;;;;;;;;;;;11447:30;;11410:20;;11447:30;;;;;;;11028:454;;;:::o;788:96:7:-;867:10;788:96;:::o;9549:308:3:-;9616:16;;;9608:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9684:16;9692:7;9684;:16::i;:::-;9683:17;9675:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9740:20;;;;:11;:20;;;;;;;;:25;;;;;;;;;;;;;9771:21;;:17;:21;;;;;:33;;:31;:33::i;:::-;9816:36;;9844:7;;9816:36;;;;9836:1;;9816:36;;9836:1;;9816:36;9549:308;;:::o;1065:112:10:-;1156:14;;1065:112::o;786:119:9:-;842:21;:8;855:7;842:21;:12;:21;:::i;:::-;878:20;;;;;;;;;;;786:119;:::o;911:127::-;970:24;:8;986:7;970:24;:15;:24;:::i;:::-;1009:22;;;;;;;;;;;911:127;:::o;779:200:8:-;851:4;875:21;;;867:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;952:20:8;;:11;:20;;;;;;;;;;;;;;;779:200::o;12047:337:3:-;12180:4;12197:15;:2;:13;;;:15::i;:::-;12192:48;;-1:-1:-1;12229:4:3;12222:11;;12192:48;12268:70;;;;;12305:10;12268:70;;;;;;:36;:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;12246:13;;12268:36;;;;;;12305:10;;12317:4;;12323:7;;12332:5;;12268:70;;;;;;;;;;;12246:13;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;12268:70:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12268:70:3;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12268:70:3;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;12268:70:3;12352:26;;12362:16;12352:26;;-1:-1:-1;;12047:337:3;;;;;;:::o;12536:155::-;12631:1;12595:24;;;:15;:24;;;;;;:38;:24;:38;12591:96;;12678:1;12643:24;;;:15;:24;;;;;:37;;;;;;12536:155::o;1278:108:10:-;1358:14;;:21;;1377:1;1358:21;:18;:21;:::i;:::-;1341:38;;1278:108::o;1183:89::-;1246:19;;1264:1;1246:19;;;1183:89::o;260:175:8:-;337:18;341:4;347:7;337:3;:18::i;:::-;336:19;328:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;401:20;;:11;:20;;;;;;;;;;;:27;;;;424:4;401:27;;;260:175::o;510:180::-;589:18;593:4;599:7;589:3;:18::i;:::-;581:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;655:20;;678:5;655:20;;;;;;;;;;;:28;;;;;;510:180::o;557:797:18:-;617:4;1265:20;;1110:66;1304:15;;;;;:42;;-1:-1:-1;1323:23:18;;;1296:51;-1:-1:-1;;557:797:18:o;1274:134:13:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;1274:134;-1:-1:-1;;;1274:134:13:o;1732:187::-;1818:7;1853:12;1845:6;;;;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1837:29:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:5:13;;;1732:187::o",
  "source": "pragma solidity 0.5.16;\n\nimport \"openzeppelin-solidity/contracts/access/roles/MinterRole.sol\";\nimport \"./AdaptedERC721.sol\";\n\n// This contract definiition is the same as ERC721Mintable, however it uses an\n// adapted ERC721 - with different event names\ncontract NonFungibleToken is AdaptedERC721, MinterRole {\n  /**\n   * @dev Function to mint tokens.\n   * @param to The address that will receive the minted tokens.\n   * @param tokenId The token id to mint.\n   * @return A boolean that indicates if the operation was successful.\n   */\n  function mint(address to, uint256 tokenId) public onlyMinter returns (bool) {\n    _mint(to, tokenId);\n    return true;\n  }\n}\n",
  "sourcePath": "@airswap/tokens/contracts/NonFungibleToken.sol",
  "ast": {
    "absolutePath": "@airswap/tokens/contracts/NonFungibleToken.sol",
    "exportedSymbols": {
      "NonFungibleToken": [
        890
      ]
    },
    "id": 891,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 864,
        "literals": [
          "solidity",
          "0.5",
          ".16"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "file": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
        "id": 865,
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 2277,
        "src": "25:69:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@airswap/tokens/contracts/AdaptedERC721.sol",
        "file": "./AdaptedERC721.sol",
        "id": 866,
        "nodeType": "ImportDirective",
        "scope": 891,
        "sourceUnit": 857,
        "src": "95:29:5",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 867,
              "name": "AdaptedERC721",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 856,
              "src": "281:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AdaptedERC721_$856",
                "typeString": "contract AdaptedERC721"
              }
            },
            "id": 868,
            "nodeType": "InheritanceSpecifier",
            "src": "281:13:5"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 869,
              "name": "MinterRole",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2276,
              "src": "296:10:5",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MinterRole_$2276",
                "typeString": "contract MinterRole"
              }
            },
            "id": 870,
            "nodeType": "InheritanceSpecifier",
            "src": "296:10:5"
          }
        ],
        "contractDependencies": [
          856,
          2088,
          2276,
          2377,
          2387
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 890,
        "linearizedBaseContracts": [
          890,
          2276,
          2088,
          856,
          2377,
          2387
        ],
        "name": "NonFungibleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 888,
              "nodeType": "Block",
              "src": "611:46:5",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 882,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 872,
                        "src": "623:2:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 883,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 874,
                        "src": "627:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 881,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 680,
                      "src": "617:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 884,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "617:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 885,
                  "nodeType": "ExpressionStatement",
                  "src": "617:18:5"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "74727565",
                    "id": 886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "648:4:5",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 880,
                  "id": 887,
                  "nodeType": "Return",
                  "src": "641:11:5"
                }
              ]
            },
            "documentation": "@dev Function to mint tokens.\n@param to The address that will receive the minted tokens.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
            "id": 889,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 877,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 876,
                  "name": "onlyMinter",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2209,
                  "src": "585:10:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "585:10:5"
              }
            ],
            "name": "mint",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 872,
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "549:10:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 871,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "549:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 874,
                  "name": "tokenId",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "561:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "561:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "548:29:5"
            },
            "returnParameters": {
              "id": 880,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 879,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 889,
                  "src": "605:4:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 878,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "605:4:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "604:6:5"
            },
            "scope": 890,
            "src": "535:122:5",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 891,
        "src": "252:407:5"
      }
    ],
    "src": "0:660:5"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "@airswap/tokens/contracts/NonFungibleToken.sol",
      "exportedSymbols": {
        "NonFungibleToken": [
          890
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "0.5",
            ".16"
          ]
        },
        "id": 864,
        "name": "PragmaDirective",
        "src": "0:23:5"
      },
      {
        "attributes": {
          "SourceUnit": 2277,
          "absolutePath": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
          "file": "openzeppelin-solidity/contracts/access/roles/MinterRole.sol",
          "scope": 891,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 865,
        "name": "ImportDirective",
        "src": "25:69:5"
      },
      {
        "attributes": {
          "SourceUnit": 857,
          "absolutePath": "@airswap/tokens/contracts/AdaptedERC721.sol",
          "file": "./AdaptedERC721.sol",
          "scope": 891,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 866,
        "name": "ImportDirective",
        "src": "95:29:5"
      },
      {
        "attributes": {
          "contractDependencies": [
            856,
            2088,
            2276,
            2377,
            2387
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            890,
            2276,
            2088,
            856,
            2377,
            2387
          ],
          "name": "NonFungibleToken",
          "scope": 891
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "AdaptedERC721",
                  "referencedDeclaration": 856,
                  "type": "contract AdaptedERC721"
                },
                "id": 867,
                "name": "UserDefinedTypeName",
                "src": "281:13:5"
              }
            ],
            "id": 868,
            "name": "InheritanceSpecifier",
            "src": "281:13:5"
          },
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "MinterRole",
                  "referencedDeclaration": 2276,
                  "type": "contract MinterRole"
                },
                "id": 869,
                "name": "UserDefinedTypeName",
                "src": "296:10:5"
              }
            ],
            "id": 870,
            "name": "InheritanceSpecifier",
            "src": "296:10:5"
          },
          {
            "attributes": {
              "documentation": "@dev Function to mint tokens.\n@param to The address that will receive the minted tokens.\n@param tokenId The token id to mint.\n@return A boolean that indicates if the operation was successful.",
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "name": "mint",
              "scope": 890,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "to",
                      "scope": 889,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 871,
                        "name": "ElementaryTypeName",
                        "src": "549:7:5"
                      }
                    ],
                    "id": 872,
                    "name": "VariableDeclaration",
                    "src": "549:10:5"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "name": "tokenId",
                      "scope": 889,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 873,
                        "name": "ElementaryTypeName",
                        "src": "561:7:5"
                      }
                    ],
                    "id": 874,
                    "name": "VariableDeclaration",
                    "src": "561:15:5"
                  }
                ],
                "id": 875,
                "name": "ParameterList",
                "src": "548:29:5"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 889,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "bool",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "bool",
                          "type": "bool"
                        },
                        "id": 878,
                        "name": "ElementaryTypeName",
                        "src": "605:4:5"
                      }
                    ],
                    "id": 879,
                    "name": "VariableDeclaration",
                    "src": "605:4:5"
                  }
                ],
                "id": 880,
                "name": "ParameterList",
                "src": "604:6:5"
              },
              {
                "attributes": {
                  "arguments": null
                },
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 2209,
                      "type": "modifier ()",
                      "value": "onlyMinter"
                    },
                    "id": 876,
                    "name": "Identifier",
                    "src": "585:10:5"
                  }
                ],
                "id": 877,
                "name": "ModifierInvocation",
                "src": "585:10:5"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 680,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 881,
                            "name": "Identifier",
                            "src": "617:5:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 872,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 882,
                            "name": "Identifier",
                            "src": "623:2:5"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 874,
                              "type": "uint256",
                              "value": "tokenId"
                            },
                            "id": 883,
                            "name": "Identifier",
                            "src": "627:7:5"
                          }
                        ],
                        "id": 884,
                        "name": "FunctionCall",
                        "src": "617:18:5"
                      }
                    ],
                    "id": 885,
                    "name": "ExpressionStatement",
                    "src": "617:18:5"
                  },
                  {
                    "attributes": {
                      "functionReturnParameters": 880
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "hexvalue": "74727565",
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "subdenomination": null,
                          "token": "bool",
                          "type": "bool",
                          "value": "true"
                        },
                        "id": 886,
                        "name": "Literal",
                        "src": "648:4:5"
                      }
                    ],
                    "id": 887,
                    "name": "Return",
                    "src": "641:11:5"
                  }
                ],
                "id": 888,
                "name": "Block",
                "src": "611:46:5"
              }
            ],
            "id": 889,
            "name": "FunctionDefinition",
            "src": "535:122:5"
          }
        ],
        "id": 890,
        "name": "ContractDefinition",
        "src": "252:407:5"
      }
    ],
    "id": 891,
    "name": "SourceUnit",
    "src": "0:660:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.3",
  "updatedAt": "2021-03-17T14:01:09.786Z",
  "devdoc": {
    "methods": {
      "approve(address,uint256)": {
        "details": "Approves another address to transfer the given token ID The zero address indicates there is no approved address. There can only be one approved address per token at a given time. Can only be called by the token owner or an approved operator.",
        "params": {
          "to": "address to be approved for the given token ID",
          "tokenId": "uint256 ID of the token to be approved"
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "owner": "address to query the balance of"
        },
        "return": "uint256 representing the amount owned by the passed address"
      },
      "getApproved(uint256)": {
        "details": "Gets the approved address for a token ID, or zero if no address set Reverts if the token ID does not exist.",
        "params": {
          "tokenId": "uint256 ID of the token to query the approval of"
        },
        "return": "address currently approved for the given token ID"
      },
      "isApprovedForAll(address,address)": {
        "details": "Tells whether an operator is approved by a given owner.",
        "params": {
          "operator": "operator address which you want to query the approval of",
          "owner": "owner address which you want to query the approval of"
        },
        "return": "bool whether the given operator is approved by the given owner"
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens.",
        "params": {
          "to": "The address that will receive the minted tokens.",
          "tokenId": "The token id to mint."
        },
        "return": "A boolean that indicates if the operation was successful."
      },
      "ownerOf(uint256)": {
        "details": "Gets the owner of the specified token ID.",
        "params": {
          "tokenId": "uint256 ID of the token to query the owner of"
        },
        "return": "address currently marked as the owner of the given token ID"
      },
      "safeTransferFrom(address,address,uint256)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "safeTransferFrom(address,address,uint256,bytes)": {
        "details": "Safely transfers the ownership of a given token ID to another address If the target address is a contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer, and return the magic value `bytes4(keccak256(\"onERC721Received(address,address,uint256,bytes)\"))`; otherwise, the transfer is reverted. Requires the msg.sender to be the owner, approved, or operator",
        "params": {
          "_data": "bytes data to send along with a safe transfer check",
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      },
      "setApprovalForAll(address,bool)": {
        "details": "Sets or unsets the approval of a given operator An operator is allowed to transfer all tokens of the sender on their behalf.",
        "params": {
          "approved": "representing the status of the approval to be set",
          "to": "operator address to set the approval"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "See {IERC165-supportsInterface}.     * Time complexity O(1), guaranteed to always use less than 30 000 gas."
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfers the ownership of a given token ID to another address. Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requires the msg.sender to be the owner, approved, or operator.",
        "params": {
          "from": "current owner of the token",
          "to": "address to receive the ownership of the given token ID",
          "tokenId": "uint256 ID of the token to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}